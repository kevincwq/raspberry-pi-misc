namespace Iot.Device.SenseHat.Extension;

/*
Every character in the font is encoded row-wise in 8 bytes.

The most significant bit of each byte corresponds to the first pixel in a row. 

The character 'A' (0x41 / 65) is encoded as 
{ 0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00 }

    0x30 => 0011 0000 => ..XX....
    0x78 => 0111 1000 => .XXXX...
    0xCC => 1100 1100 => XX..XX..
    0xCC => 1100 1100 => XX..XX..
    0xFC => 1111 1100 => XXXXXX..
    0xCC => 1100 1100 => XX..XX..
    0xCC => 1100 1100 => XX..XX..
    0x00 => 0000 0000 => ........

To access the nth pixel in a row, right-shift by 7-n.

                         . . X X . . . .
                         | | | | | | | |
    (0x30 >> 7) & 1 == 0-+ | | | | | | |
    (0x30 >> 6) & 1 == 0---+ | | | | | |
    (0x30 >> 5) & 1 == 1-----+ | | | | |
    (0x30 >> 4) & 1 == 1-------+ | | | |
    (0x30 >> 3) & 1 == 0---------+ | | |
    (0x30 >> 2) & 1 == 0-----------+ | |
    (0x30 >> 1) & 1 == 0-------------+ |
    (0x30 >> 0) & 1 == 0---------------+
*/

internal static class Font8x8
{
    private static readonly Dictionary<char, byte[]> FONTDICT = new()
    {
        // Constant: font8x8_basic
        // Contains an 8x8 font map for unicode points U+0000 - U+007F (basic latin)
        { '\u0000', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0000 (nul)
        { '\u0001', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0001
        { '\u0002', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0002
        { '\u0003', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0003
        { '\u0004', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0004
        { '\u0005', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0005
        { '\u0006', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0006
        { '\u0007', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0007
        { '\u0008', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0008
        { '\u0009', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0009
        { '\u000A', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+000A
        { '\u000B', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+000B
        { '\u000C', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+000C
        { '\u000D', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+000D
        { '\u000E', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+000E
        { '\u000F', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+000F
        { '\u0010', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0010
        { '\u0011', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0011
        { '\u0012', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0012
        { '\u0013', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0013
        { '\u0014', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0014
        { '\u0015', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0015
        { '\u0016', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0016
        { '\u0017', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0017
        { '\u0018', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0018
        { '\u0019', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0019
        { '\u001A', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+001A
        { '\u001B', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+001B
        { '\u001C', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+001C
        { '\u001D', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+001D
        { '\u001E', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+001E
        { '\u001F', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+001F
        { '\u0020', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0020 (space)
        { '\u0021', new byte[] { 0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00 } },   // U+0021 (!)
        { '\u0022', new byte[] { 0x6C, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0022 (")
        { '\u0023', new byte[] { 0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C, 0x00 } },   // U+0023 (#)
        { '\u0024', new byte[] { 0x30, 0x7C, 0xC0, 0x78, 0x0C, 0xF8, 0x30, 0x00 } },   // U+0024 ($)
        { '\u0025', new byte[] { 0x00, 0xC6, 0xCC, 0x18, 0x30, 0x66, 0xC6, 0x00 } },   // U+0025 (%)
        { '\u0026', new byte[] { 0x38, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0x76, 0x00 } },   // U+0026 (&)
        { '\u0027', new byte[] { 0x60, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0027 (')
        { '\u0028', new byte[] { 0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00 } },   // U+0028 (()
        { '\u0029', new byte[] { 0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00 } },   // U+0029 ())
        { '\u002A', new byte[] { 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00 } },   // U+002A (*)
        { '\u002B', new byte[] { 0x00, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x00, 0x00 } },   // U+002B (+)
        { '\u002C', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x60 } },   // U+002C (,)
        { '\u002D', new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00 } },   // U+002D (-)
        { '\u002E', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00 } },   // U+002E (.)
        { '\u002F', new byte[] { 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00 } },   // U+002F (/)
        { '\u0030', new byte[] { 0x7C, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6, 0x7C, 0x00 } },   // U+0030 (0)
        { '\u0031', new byte[] { 0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00 } },   // U+0031 (1)
        { '\u0032', new byte[] { 0x78, 0xCC, 0x0C, 0x38, 0x60, 0xCC, 0xFC, 0x00 } },   // U+0032 (2)
        { '\u0033', new byte[] { 0x78, 0xCC, 0x0C, 0x38, 0x0C, 0xCC, 0x78, 0x00 } },   // U+0033 (3)
        { '\u0034', new byte[] { 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x1E, 0x00 } },   // U+0034 (4)
        { '\u0035', new byte[] { 0xFC, 0xC0, 0xF8, 0x0C, 0x0C, 0xCC, 0x78, 0x00 } },   // U+0035 (5)
        { '\u0036', new byte[] { 0x38, 0x60, 0xC0, 0xF8, 0xCC, 0xCC, 0x78, 0x00 } },   // U+0036 (6)
        { '\u0037', new byte[] { 0xFC, 0xCC, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00 } },   // U+0037 (7)
        { '\u0038', new byte[] { 0x78, 0xCC, 0xCC, 0x78, 0xCC, 0xCC, 0x78, 0x00 } },   // U+0038 (8)
        { '\u0039', new byte[] { 0x78, 0xCC, 0xCC, 0x7C, 0x0C, 0x18, 0x70, 0x00 } },   // U+0039 (9)
        { '\u003A', new byte[] { 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00 } },   // U+003A (:)
        { '\u003B', new byte[] { 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x60 } },   // U+003B (;)
        { '\u003C', new byte[] { 0x18, 0x30, 0x60, 0xC0, 0x60, 0x30, 0x18, 0x00 } },   // U+003C (<)
        { '\u003D', new byte[] { 0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00 } },   // U+003D (=)
        { '\u003E', new byte[] { 0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60, 0x00 } },   // U+003E (>)
        { '\u003F', new byte[] { 0x78, 0xCC, 0x0C, 0x18, 0x30, 0x00, 0x30, 0x00 } },   // U+003F (?)
        { '\u0040', new byte[] { 0x7C, 0xC6, 0xDE, 0xDE, 0xDE, 0xC0, 0x78, 0x00 } },   // U+0040 (@)
        { '\u0041', new byte[] { 0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00 } },   // U+0041 (A)
        { '\u0042', new byte[] { 0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00 } },   // U+0042 (B)
        { '\u0043', new byte[] { 0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00 } },   // U+0043 (C)
        { '\u0044', new byte[] { 0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00 } },   // U+0044 (D)
        { '\u0045', new byte[] { 0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00 } },   // U+0045 (E)
        { '\u0046', new byte[] { 0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00 } },   // U+0046 (F)
        { '\u0047', new byte[] { 0x3C, 0x66, 0xC0, 0xC0, 0xCE, 0x66, 0x3E, 0x00 } },   // U+0047 (G)
        { '\u0048', new byte[] { 0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0x00 } },   // U+0048 (H)
        { '\u0049', new byte[] { 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+0049 (I)
        { '\u004A', new byte[] { 0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00 } },   // U+004A (J)
        { '\u004B', new byte[] { 0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00 } },   // U+004B (K)
        { '\u004C', new byte[] { 0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00 } },   // U+004C (L)
        { '\u004D', new byte[] { 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00 } },   // U+004D (M)
        { '\u004E', new byte[] { 0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00 } },   // U+004E (N)
        { '\u004F', new byte[] { 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00 } },   // U+004F (O)
        { '\u0050', new byte[] { 0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00 } },   // U+0050 (P)
        { '\u0051', new byte[] { 0x78, 0xCC, 0xCC, 0xCC, 0xDC, 0x78, 0x1C, 0x00 } },   // U+0051 (Q)
        { '\u0052', new byte[] { 0xFC, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0xE6, 0x00 } },   // U+0052 (R)
        { '\u0053', new byte[] { 0x78, 0xCC, 0xE0, 0x70, 0x1C, 0xCC, 0x78, 0x00 } },   // U+0053 (S)
        { '\u0054', new byte[] { 0xFC, 0xB4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+0054 (T)
        { '\u0055', new byte[] { 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFC, 0x00 } },   // U+0055 (U)
        { '\u0056', new byte[] { 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00 } },   // U+0056 (V)
        { '\u0057', new byte[] { 0xC6, 0xC6, 0xC6, 0xD6, 0xFE, 0xEE, 0xC6, 0x00 } },   // U+0057 (W)
        { '\u0058', new byte[] { 0xC6, 0xC6, 0x6C, 0x38, 0x38, 0x6C, 0xC6, 0x00 } },   // U+0058 (X)
        { '\u0059', new byte[] { 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x78, 0x00 } },   // U+0059 (Y)
        { '\u005A', new byte[] { 0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00 } },   // U+005A (Z)
        { '\u005B', new byte[] { 0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00 } },   // U+005B ([)
        { '\u005C', new byte[] { 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00 } },   // U+005C (\)
        { '\u005D', new byte[] { 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00 } },   // U+005D (])
        { '\u005E', new byte[] { 0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00 } },   // U+005E (^)
        { '\u005F', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF } },   // U+005F (_)
        { '\u0060', new byte[] { 0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+0060 (`)
        { '\u0061', new byte[] { 0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 } },   // U+0061 (a)
        { '\u0062', new byte[] { 0xE0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0xDC, 0x00 } },   // U+0062 (b)
        { '\u0063', new byte[] { 0x00, 0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x00 } },   // U+0063 (c)
        { '\u0064', new byte[] { 0x1C, 0x0C, 0x0C, 0x3e, 0xCC, 0xCC, 0x76, 0x00 } },   // U+0064 (d)
        { '\u0065', new byte[] { 0x00, 0x00, 0x78, 0xCC, 0x3f, 0xC0, 0x78, 0x00 } },   // U+0065 (e)
        { '\u0066', new byte[] { 0x38, 0x6C, 0x60, 0x0f, 0x60, 0x60, 0xF0, 0x00 } },   // U+0066 (f)
        { '\u0067', new byte[] { 0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 } },   // U+0067 (g)
        { '\u0068', new byte[] { 0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00 } },   // U+0068 (h)
        { '\u0069', new byte[] { 0x30, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+0069 (i)
        { '\u006A', new byte[] { 0x0C, 0x00, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78 } },   // U+006A (j)
        { '\u006B', new byte[] { 0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00 } },   // U+006B (k)
        { '\u006C', new byte[] { 0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+006C (l)
        { '\u006D', new byte[] { 0x00, 0x00, 0xCC, 0xFE, 0xFE, 0xD6, 0xC6, 0x00 } },   // U+006D (m)
        { '\u006E', new byte[] { 0x00, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00 } },   // U+006E (n)
        { '\u006F', new byte[] { 0x00, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00 } },   // U+006F (o)
        { '\u0070', new byte[] { 0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0 } },   // U+0070 (p)
        { '\u0071', new byte[] { 0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E } },   // U+0071 (q)
        { '\u0072', new byte[] { 0x00, 0x00, 0xDC, 0x76, 0x66, 0x60, 0xF0, 0x00 } },   // U+0072 (r)
        { '\u0073', new byte[] { 0x00, 0x00, 0x7C, 0xC0, 0x78, 0x0C, 0xF8, 0x00 } },   // U+0073 (s)
        { '\u0074', new byte[] { 0x10, 0x30, 0x7C, 0x30, 0x30, 0x34, 0x18, 0x00 } },   // U+0074 (t)
        { '\u0075', new byte[] { 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00 } },   // U+0075 (u)
        { '\u0076', new byte[] { 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00 } },   // U+0076 (v)
        { '\u0077', new byte[] { 0x00, 0x00, 0xC6, 0xD6, 0xFE, 0xFE, 0x6C, 0x00 } },   // U+0077 (w)
        { '\u0078', new byte[] { 0x00, 0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00 } },   // U+0078 (x)
        { '\u0079', new byte[] { 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 } },   // U+0079 (y)
        { '\u007A', new byte[] { 0x00, 0x00, 0xFC, 0x98, 0x30, 0x64, 0xFC, 0x00 } },   // U+007A (z)
        { '\u007B', new byte[] { 0x1C, 0x30, 0x30, 0xE0, 0x30, 0x30, 0x1C, 0x00 } },   // U+007B ({)
        { '\u007C', new byte[] { 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00 } },   // U+007C (|)
        { '\u007D', new byte[] { 0xE0, 0x30, 0x30, 0x1C, 0x30, 0x30, 0xE0, 0x00 } },   // U+007D (})
        { '\u007E', new byte[] { 0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+007E (~)
        { '\u007F', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+007F

        // Constant: font8x8_00A0
        // Contains an 8x8 font map for unicode points U+00A0 - U+00FF (extended latin)
        { '\u00A0', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+00A0 (no break space)
        { '\u00A1', new byte[] { 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00 } },   // U+00A1 (inverted !)
        { '\u00A2', new byte[] { 0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18 } },   // U+00A2 (dollarcents)
        { '\u00A3', new byte[] { 0x38, 0x6C, 0x64, 0xF0, 0x60, 0xE6, 0xFC, 0x00 } },   // U+00A3 (pound sterling)
        { '\u00A4', new byte[] { 0x00, 0x00, 0xC6, 0x7C, 0x6C, 0x7C, 0xC6, 0x00 } },   // U+00A4 (currency mark)
        { '\u00A5', new byte[] { 0xCC, 0xCC, 0x78, 0xFC, 0x30, 0xFC, 0x30, 0x30 } },   // U+00A5 (yen)
        { '\u00A6', new byte[] { 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00 } },   // U+00A6 (broken pipe)
        { '\u00A7', new byte[] { 0x3E, 0x63, 0x38, 0x6C, 0x6C, 0x38, 0xCC, 0x78 } },   // U+00A7 (paragraph)
        { '\u00A8', new byte[] { 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+00A8 (diaeresis)
        { '\u00A9', new byte[] { 0x3C, 0x42, 0x99, 0xA1, 0xA1, 0x99, 0x42, 0x3C } },   // U+00A9 (copyright symbol)
        { '\u00AA', new byte[] { 0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x00, 0x00, 0x00 } },   // U+00AA (superscript a)
        { '\u00AB', new byte[] { 0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00 } },   // U+00AB (<<)
        { '\u00AC', new byte[] { 0x00, 0x00, 0x00, 0xFC, 0x0C, 0x0C, 0x00, 0x00 } },   // U+00AC (gun pointing left)
        { '\u00AD', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+00AD (soft hyphen)
        { '\u00AE', new byte[] { 0x3C, 0x42, 0xB9, 0xA5, 0xB9, 0xA5, 0x42, 0x3C } },   // U+00AE (registered symbol)
        { '\u00AF', new byte[] { 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+00AF (macron)
        { '\u00B0', new byte[] { 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00 } },   // U+00B0 (degree)
        { '\u00B1', new byte[] { 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00 } },   // U+00B1 (plusminus)
        { '\u00B2', new byte[] { 0x38, 0x0C, 0x18, 0x30, 0x3C, 0x00, 0x00, 0x00 } },   // U+00B2 (superscript 2)
        { '\u00B3', new byte[] { 0x38, 0x0C, 0x18, 0x0C, 0x38, 0x00, 0x00, 0x00 } },   // U+00B3 (superscript 3)
        { '\u00B4', new byte[] { 0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+00B4 (aigu)
        { '\u00B5', new byte[] { 0x00, 0x00, 0x66, 0x66, 0x66, 0x7C, 0x60, 0xC0 } },   // U+00B5 (mu)
        { '\u00B6', new byte[] { 0x7F, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x00 } },   // U+00B6 (pilcrow)
        { '\u00B7', new byte[] { 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 } },   // U+00B7 (central dot)
        { '\u00B8', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x0C, 0x78 } },   // U+00B8 (cedille)
        { '\u00B9', new byte[] { 0x10, 0x30, 0x10, 0x38, 0x00, 0x00, 0x00, 0x00 } },   // U+00B9 (superscript 1)
        { '\u00BA', new byte[] { 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00 } },   // U+00BA (superscript 0)
        { '\u00BB', new byte[] { 0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00 } },   // U+00BB (>>)
        { '\u00BC', new byte[] { 0xC3, 0xC6, 0xCC, 0xBD, 0x37, 0x6F, 0xCF, 0xC0 } },   // U+00BC (1/4)
        { '\u00BD', new byte[] { 0xC3, 0xC6, 0xCC, 0xDE, 0x33, 0x66, 0xCC, 0x0F } },   // U+00BD (1/2)
        { '\u00BE', new byte[] { 0xC0, 0x23, 0xC6, 0x2D, 0xDB, 0x35, 0x67, 0x01 } },   // U+00BE (3/4)
        { '\u00BF', new byte[] { 0x30, 0x00, 0x30, 0x60, 0xC0, 0xCC, 0x78, 0x00 } },   // U+00BF (inverted ?)
        { '\u00C0', new byte[] { 0xE0, 0x00, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00 } },   // U+00C0 (A grave)
        { '\u00C1', new byte[] { 0x0E, 0x00, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x00 } },   // U+00C1 (A aigu)
        { '\u00C2', new byte[] { 0x38, 0x6C, 0x00, 0x7C, 0xC6, 0xFE, 0xC6, 0x00 } },   // U+00C2 (A circumflex)
        { '\u00C3', new byte[] { 0x76, 0xDC, 0x00, 0x7C, 0xC6, 0xFE, 0xC6, 0x00 } },   // U+00C3 (A ~)
        { '\u00C4', new byte[] { 0xC6, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0xC6, 0x00 } },   // U+00C4 (A umlaut)
        { '\u00C5', new byte[] { 0x30, 0x30, 0x00, 0x78, 0xCC, 0xFC, 0xCC, 0x00 } },   // U+00C5 (A ring)
        { '\u00C6', new byte[] { 0x3E, 0x6C, 0xCC, 0xFE, 0xCC, 0xCC, 0xCE, 0x00 } },   // U+00C6 (AE)
        { '\u00C7', new byte[] { 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x18, 0x0C, 0x78 } },   // U+00C7 (C cedille)
        { '\u00C8', new byte[] { 0xE0, 0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00 } },   // U+00C8 (E grave)
        { '\u00C9', new byte[] { 0x1C, 0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00 } },   // U+00C9 (E aigu)
        { '\u00CA', new byte[] { 0x30, 0x48, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00 } },   // U+00CA (E circumflex)
        { '\u00CB', new byte[] { 0x6C, 0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00 } },   // U+00CB (E umlaut)
        { '\u00CC', new byte[] { 0xE0, 0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+00CC (I grave)
        { '\u00CD', new byte[] { 0x1C, 0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+00CD (I aigu)
        { '\u00CE', new byte[] { 0x30, 0x48, 0x00, 0x78, 0x30, 0x30, 0x78, 0x00 } },   // U+00CE (I circumflex)
        { '\u00CF', new byte[] { 0xCC, 0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+00CF (I umlaut)
        { '\u00D0', new byte[] { 0xFC, 0x66, 0xF6, 0xF6, 0x66, 0x66, 0xFC, 0x00 } },   // U+00D0 (Eth)
        { '\u00D1', new byte[] { 0xFC, 0x00, 0xCC, 0xEC, 0xFC, 0xDC, 0xCC, 0x00 } },   // U+00D1 (N ~)
        { '\u00D2', new byte[] { 0x70, 0x00, 0x18, 0x3C, 0x66, 0x3C, 0x18, 0x00 } },   // U+00D2 (O grave)
        { '\u00D3', new byte[] { 0x0E, 0x00, 0x18, 0x3C, 0x66, 0x3C, 0x18, 0x00 } },   // U+00D3 (O aigu)
        { '\u00D4', new byte[] { 0x3C, 0x66, 0x18, 0x3C, 0x66, 0x3C, 0x18, 0x00 } },   // U+00D4 (O circumflex)
        { '\u00D5', new byte[] { 0x76, 0xDC, 0x00, 0x7C, 0xC6, 0xC6, 0x7C, 0x00 } },   // U+00D5 (O ~)
        { '\u00D6', new byte[] { 0xC3, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x00 } },   // U+00D6 (O umlaut)
        { '\u00D7', new byte[] { 0x00, 0x6C, 0x38, 0x10, 0x38, 0x6C, 0x00, 0x00 } },   // U+00D7 (multiplicative x)
        { '\u00D8', new byte[] { 0x3A, 0x6C, 0xCE, 0xDE, 0xF6, 0x6C, 0xB8, 0x00 } },   // U+00D8 (O stroke)
        { '\u00D9', new byte[] { 0x70, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 } },   // U+00D9 (U grave)
        { '\u00DA', new byte[] { 0x0E, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 } },   // U+00DA (U aigu)
        { '\u00DB', new byte[] { 0x3C, 0x66, 0x00, 0x66, 0x66, 0x66, 0x3C, 0x00 } },   // U+00DB (U circumflex)
        { '\u00DC', new byte[] { 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00 } },   // U+00DC (U umlaut)
        { '\u00DD', new byte[] { 0x0E, 0x00, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x00 } },   // U+00DD (Y aigu)
        { '\u00DE', new byte[] { 0xF0, 0x60, 0x7C, 0x66, 0x66, 0x7C, 0x60, 0xF0 } },   // U+00DE (Thorn)
        { '\u00DF', new byte[] { 0x00, 0x78, 0xCC, 0xF8, 0xCC, 0xF8, 0xC0, 0xC0 } },   // U+00DF (beta)
        { '\u00E0', new byte[] { 0xE0, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00 } },   // U+00E0 (a grave)
        { '\u00E1', new byte[] { 0x1C, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00 } },   // U+00E1 (a aigu)
        { '\u00E2', new byte[] { 0x7E, 0xC3, 0x3C, 0x06, 0x3E, 0x66, 0x3F, 0x00 } },   // U+00E2 (a circumflex)
        { '\u00E3', new byte[] { 0x76, 0xDC, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00 } },   // U+00E3 (a ~)
        { '\u00E4', new byte[] { 0xCC, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00 } },   // U+00E4 (a umlaut)
        { '\u00E5', new byte[] { 0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x7E, 0x00 } },   // U+00E5 (a ring)
        { '\u00E6', new byte[] { 0x00, 0x00, 0x7F, 0x0C, 0x7F, 0xCC, 0x7F, 0x00 } },   // U+00E6 (ae)
        { '\u00E7', new byte[] { 0x00, 0x00, 0x78, 0xC0, 0xC0, 0x78, 0x0C, 0x38 } },   // U+00E7 (c cedille)
        { '\u00E8', new byte[] { 0xE0, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 } },   // U+00E8 (e grave)
        { '\u00E9', new byte[] { 0x1C, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 } },   // U+00E9 (e aigu)
        { '\u00EA', new byte[] { 0x7E, 0xC3, 0x3C, 0x66, 0x7E, 0x60, 0x3C, 0x00 } },   // U+00EA (e circumflex)
        { '\u00EB', new byte[] { 0xCC, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 } },   // U+00EB (e umlaut)
        { '\u00EC', new byte[] { 0xE0, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+00EC (i grave)
        { '\u00ED', new byte[] { 0x38, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+00ED (i augu)
        { '\u00EE', new byte[] { 0x7C, 0xC6, 0x38, 0x18, 0x18, 0x18, 0x3C, 0x00 } },   // U+00EE (i circumflex)
        { '\u00EF', new byte[] { 0xCC, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+00EF (i umlaut)
        { '\u00F0', new byte[] { 0xD8, 0x70, 0xD8, 0x0C, 0x7C, 0xCC, 0x78, 0x00 } },   // U+00F0 (eth)
        { '\u00F1', new byte[] { 0x00, 0xF8, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0x00 } },   // U+00F1 (n ~)
        { '\u00F2', new byte[] { 0x00, 0xE0, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 } },   // U+00F2 (o grave)
        { '\u00F3', new byte[] { 0x00, 0x1C, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 } },   // U+00F3 (o aigu)
        { '\u00F4', new byte[] { 0x78, 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 } },   // U+00F4 (o circumflex)
        { '\u00F5', new byte[] { 0x76, 0xDC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 } },   // U+00F5 (o ~)
        { '\u00F6', new byte[] { 0x00, 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 } },   // U+00F6 (o umlaut)
        { '\u00F7', new byte[] { 0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18, 0x00 } },   // U+00F7 (division)
        { '\u00F8', new byte[] { 0x00, 0x06, 0x3C, 0x6E, 0x7E, 0x76, 0x3C, 0x60 } },   // U+00F8 (o stroke)
        { '\u00F9', new byte[] { 0x00, 0xE0, 0x00, 0xCC, 0xCC, 0xCC, 0x7E, 0x00 } },   // U+00F9 (u grave)
        { '\u00FA', new byte[] { 0x00, 0x1C, 0x00, 0xCC, 0xCC, 0xCC, 0x7E, 0x00 } },   // U+00FA (u aigu)
        { '\u00FB', new byte[] { 0x78, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0x7E, 0x00 } },   // U+00FB (u circumflex)
        { '\u00FC', new byte[] { 0x00, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0x7E, 0x00 } },   // U+00FC (u umlaut)
        { '\u00FD', new byte[] { 0x00, 0x1C, 0x00, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 } },   // U+00FD (y aigu)
        { '\u00FE', new byte[] { 0x00, 0x00, 0x60, 0x7C, 0x66, 0x7C, 0x60, 0x00 } },   // U+00FE (thorn)
        { '\u00FF', new byte[] { 0x00, 0xCC, 0x00, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 } },   // U+00FF (y umlaut)

        // Constant: font8x8_0390
        // Contains an 8x8 font map for unicode points U+0390 - U+03C9 (greek characters)
        { '\u0390', new byte[] { 0xB4, 0x00, 0x30, 0x30, 0x30, 0x34, 0x18, 0x00 } },   // U+0390 (iota with tonos and diaeresis)
        { '\u0391', new byte[] { 0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00 } },   // U+0391 (Alpha)
        { '\u0392', new byte[] { 0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00 } },   // U+0392 (Beta)
        { '\u0393', new byte[] { 0xFC, 0xCC, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00 } },   // U+0393 (Gamma)
        { '\u0394', new byte[] { 0x10, 0x38, 0x38, 0x6C, 0x6C, 0xC6, 0xFE, 0x00 } },   // U+0394 (Delta)
        { '\u0395', new byte[] { 0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00 } },   // U+0395 (Epsilon)
        { '\u0396', new byte[] { 0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00 } },   // U+0396 (Zeta)
        { '\u0397', new byte[] { 0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0x00 } },   // U+0397 (Eta)
        { '\u0398', new byte[] { 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00 } },   // U+0398 (Theta)
        { '\u0399', new byte[] { 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+0399 (Iota)
        { '\u039A', new byte[] { 0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6, 0x00 } },   // U+039A (Kappa)
        { '\u039B', new byte[] { 0x10, 0x38, 0x38, 0x6C, 0x6C, 0xC6, 0xC6, 0x00 } },   // U+039B (Lambda)
        { '\u039C', new byte[] { 0xC6, 0xEE, 0xFE, 0xFE, 0xD6, 0xC6, 0xC6, 0x00 } },   // U+039C (Mu)
        { '\u039D', new byte[] { 0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00 } },   // U+039D (Nu)
        { '\u039E', new byte[] { 0xFE, 0xC6, 0x00, 0x7C, 0x00, 0xC6, 0xFE, 0x00 } },   // U+039E (Xi)
        { '\u039F', new byte[] { 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00 } },   // U+039F (Omikron)
        { '\u03A0', new byte[] { 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x00 } },   // U+03A0 (Pi)
        { '\u03A1', new byte[] { 0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00 } },   // U+03A1 (Rho)
        { '\u03A2', new byte[] { 0x00, 0x80, 0x40, 0x20, 0xF2, 0x09, 0x05, 0x02 } },   // U+03A2
        { '\u03A3', new byte[] { 0xFE, 0xC6, 0x60, 0x30, 0x60, 0xC6, 0xFE, 0x00 } },   // U+03A3 (Sigma 2)
        { '\u03A4', new byte[] { 0xFC, 0xB4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+03A4 (Tau)
        { '\u03A5', new byte[] { 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x78, 0x00 } },   // U+03A5 (Upsilon)
        { '\u03A6', new byte[] { 0x18, 0x7E, 0xDB, 0xDB, 0xDB, 0x7E, 0x18, 0x00 } },   // U+03A6 (Phi)
        { '\u03A7', new byte[] { 0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6, 0x00 } },   // U+03A7 (Chi)
        { '\u03A8', new byte[] { 0xDB, 0xDB, 0xDB, 0x7E, 0x18, 0x18, 0x3C, 0x00 } },   // U+03A8 (Psi)
        { '\u03A9', new byte[] { 0x7C, 0xC6, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00 } },   // U+03A9 (Omega)
        { '\u03AA', new byte[] { 0xCC, 0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00 } },   // U+03AA (Iota with diaeresis)
        { '\u03AB', new byte[] { 0xCC, 0x00, 0xCC, 0xCC, 0x78, 0x30, 0x78, 0x00 } },   // U+03AB (Upsilon with diaeresis)
        { '\u03AC', new byte[] { 0x0E, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00 } },   // U+03AC (alpha aigu)
        { '\u03AD', new byte[] { 0x1C, 0x00, 0x78, 0xC0, 0x70, 0xC0, 0x78, 0x00 } },   // U+03AD (epsilon aigu)
        { '\u03AE', new byte[] { 0x1C, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0x0C } },   // U+03AE (eta aigu)
        { '\u03AF', new byte[] { 0x1C, 0x00, 0x30, 0x30, 0x30, 0x34, 0x18, 0x00 } },   // U+03AF (iota aigu)
        { '\u03B0', new byte[] { 0xB4, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00 } },   // U+03B0 (upsilon with tonos and diaeresis)
        { '\u03B1', new byte[] { 0x00, 0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00 } },   // U+03B1 (alpha)
        { '\u03B2', new byte[] { 0x00, 0x78, 0xCC, 0xF8, 0xCC, 0xF8, 0xC0, 0xC0 } },   // U+03B2 (beta)
        { '\u03B3', new byte[] { 0x00, 0x00, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x00 } },   // U+03B3 (gamma)
        { '\u03B4', new byte[] { 0x1C, 0x30, 0x18, 0x7C, 0xCC, 0xCC, 0x78, 0x00 } },   // U+03B4 (delta)
        { '\u03B5', new byte[] { 0x00, 0x00, 0x78, 0xC0, 0x70, 0xC0, 0x78, 0x00 } },   // U+03B5 (epsilon)
        { '\u03B6', new byte[] { 0x00, 0xFC, 0x60, 0xC0, 0xC0, 0x78, 0x0C, 0x38 } },   // U+03B6 (zeta)
        { '\u03B7', new byte[] { 0x00, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0x0C } },   // U+03B7 (eta)
        { '\u03B8', new byte[] { 0x00, 0x00, 0x78, 0xCC, 0xFC, 0xCC, 0x78, 0x00 } },   // U+03B8 (theta)
        { '\u03B9', new byte[] { 0x00, 0x00, 0x30, 0x30, 0x30, 0x34, 0x18, 0x00 } },   // U+03B9 (iota)
        { '\u03BA', new byte[] { 0x00, 0x00, 0xCC, 0xD8, 0xF0, 0xD8, 0xCC, 0x00 } },   // U+03BA (kappa)
        { '\u03BB', new byte[] { 0x00, 0xC0, 0x60, 0x30, 0x38, 0x6C, 0xC6, 0x00 } },   // U+03BB (lambda)
        { '\u03BC', new byte[] { 0x00, 0x00, 0x66, 0x66, 0x66, 0x7C, 0x60, 0xC0 } },   // U+03BC (mu)
        { '\u03BD', new byte[] { 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00 } },   // U+03BD (nu)
        { '\u03BE', new byte[] { 0x78, 0xC0, 0x70, 0xC0, 0xC0, 0x78, 0x0C, 0x38 } },   // U+03BE (xi)
        { '\u03BF', new byte[] { 0x00, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00 } },   // U+03BF (omikron)
        { '\u03C0', new byte[] { 0x00, 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x00 } },   // U+03C0 (pi)
        { '\u03C1', new byte[] { 0x00, 0x00, 0x3C, 0x66, 0x66, 0x6C, 0x60, 0x60 } },   // U+03C1 (rho)
        { '\u03C2', new byte[] { 0x00, 0x00, 0x7C, 0xC0, 0xC0, 0x78, 0x0C, 0x38 } },   // U+03C2 (sigma 1)
        { '\u03C3', new byte[] { 0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00 } },   // U+03C3 (sigma 2)
        { '\u03C4', new byte[] { 0x00, 0x00, 0x7E, 0x18, 0x18, 0x1A, 0x0C, 0x00 } },   // U+03C4 (tau)
        { '\u03C5', new byte[] { 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00 } },   // U+03C5 (upsilon)
        { '\u03C6', new byte[] { 0x00, 0x00, 0x6E, 0xDB, 0xDB, 0x7E, 0x18, 0x00 } },   // U+03C6 (phi)
        { '\u03C7', new byte[] { 0x00, 0xC6, 0x6C, 0x38, 0x38, 0x6C, 0xC6, 0x00 } },   // U+03C7 (chi)
        { '\u03C8', new byte[] { 0x00, 0x00, 0xDB, 0xDB, 0xDB, 0x7E, 0x18, 0x00 } },   // U+03C8 (psi)
        { '\u03C9', new byte[] { 0x00, 0x00, 0x6C, 0xC6, 0xD6, 0xFE, 0x6C, 0x00 } },   // U+03C9 (omega)

        // Contains an 8x8 font map for unicode points U+3040 - U+309F (Hiragana)
        // Constant: font8x8_3040
        { '\u3040', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+3040
        { '\u3041', new byte[] { 0x20, 0xFC, 0x20, 0x3C, 0x6A, 0xB2, 0x64, 0x00 } },   // U+3041 (Hiragana a)
        { '\u3042', new byte[] { 0x20, 0xFC, 0x20, 0x3C, 0x6A, 0xB2, 0x64, 0x00 } },   // U+3042 (Hiragana A)
        { '\u3043', new byte[] { 0x00, 0x00, 0x00, 0x88, 0x84, 0xA4, 0x40, 0x00 } },   // U+3043 (Hiragana i)
        { '\u3044', new byte[] { 0x00, 0x80, 0x88, 0x84, 0x84, 0xA4, 0x40, 0x00 } },   // U+3044 (Hiragana I)
        { '\u3045', new byte[] { 0x00, 0x38, 0x00, 0x38, 0x44, 0x04, 0x18, 0x00 } },   // U+3045 (Hiragana u)
        { '\u3046', new byte[] { 0x3C, 0x00, 0x3C, 0x42, 0x02, 0x04, 0x18, 0x00 } },   // U+3046 (Hiragana U)
        { '\u3047', new byte[] { 0x38, 0x00, 0x7C, 0x08, 0x1C, 0x24, 0x46, 0x00 } },   // U+3047 (Hiragana e)
        { '\u3048', new byte[] { 0x38, 0x00, 0x7C, 0x08, 0x1C, 0x24, 0x46, 0x00 } },   // U+3048 (Hiragana E)
        { '\u3049', new byte[] { 0x24, 0xF2, 0x20, 0x3C, 0x62, 0xA2, 0x44, 0x00 } },   // U+3049 (Hiragana o)
        { '\u304A', new byte[] { 0x24, 0xF2, 0x20, 0x3C, 0x62, 0xA2, 0x44, 0x00 } },   // U+304A (Hiragana O)
        { '\u304B', new byte[] { 0x20, 0x24, 0xF2, 0x2A, 0x4A, 0x48, 0x90, 0x00 } },   // U+304B (Hiragana KA)
        { '\u304C', new byte[] { 0x22, 0x24, 0xF0, 0x2A, 0x4A, 0x4A, 0x90, 0x00 } },   // U+304C (Hiragana GA)
        { '\u304D', new byte[] { 0x10, 0xF8, 0x10, 0xFC, 0x38, 0x40, 0x3C, 0x00 } },   // U+304D (Hiragana KI)
        { '\u304E', new byte[] { 0x22, 0xF4, 0x20, 0xF8, 0x70, 0x80, 0x78, 0x00 } },   // U+304E (Hiragana GI)
        { '\u304F', new byte[] { 0x08, 0x10, 0x20, 0x40, 0x20, 0x10, 0x08, 0x00 } },   // U+304F (Hiragana KU)
        { '\u3050', new byte[] { 0x14, 0x22, 0x48, 0x84, 0x40, 0x20, 0x10, 0x00 } },   // U+3050 (Hiragana GU)
        { '\u3051', new byte[] { 0x00, 0x44, 0x9E, 0x84, 0x84, 0x44, 0x08, 0x00 } },   // U+3051 (Hiragana KE)
        { '\u3052', new byte[] { 0x02, 0x44, 0x88, 0xBC, 0x88, 0x48, 0x10, 0x00 } },   // U+3052 (Hiragana GE)
        { '\u3053', new byte[] { 0x00, 0x00, 0x3C, 0x00, 0x40, 0x40, 0x3C, 0x00 } },   // U+3053 (Hiragana KO)
        { '\u3054', new byte[] { 0x04, 0x02, 0x68, 0x04, 0x80, 0x80, 0x70, 0x00 } },   // U+3054 (Hiragana GO)
        { '\u3055', new byte[] { 0x08, 0x7E, 0x08, 0x3C, 0x40, 0x40, 0x38, 0x00 } },   // U+3055 (Hiragana SA)
        { '\u3056', new byte[] { 0x24, 0xF2, 0x28, 0x74, 0x80, 0x80, 0x70, 0x00 } },   // U+3056 (Hiragana ZA)
        { '\u3057', new byte[] { 0x00, 0x40, 0x40, 0x40, 0x42, 0x44, 0x38, 0x00 } },   // U+3057 (Hiragana SI)
        { '\u3058', new byte[] { 0x04, 0x42, 0x48, 0x44, 0x40, 0x44, 0x38, 0x00 } },   // U+3058 (Hiragana ZI)
        { '\u3059', new byte[] { 0x08, 0x7E, 0x18, 0x28, 0x18, 0x08, 0x30, 0x00 } },   // U+3059 (Hiragana SU)
        { '\u305A', new byte[] { 0x22, 0xF4, 0x60, 0xA0, 0x60, 0x20, 0xC0, 0x00 } },   // U+305A (Hiragana ZU)
        { '\u305B', new byte[] { 0x04, 0x4E, 0xF4, 0x44, 0x58, 0x40, 0x38, 0x00 } },   // U+305B (Hiragana SE)
        { '\u305C', new byte[] { 0x01, 0x0A, 0x5C, 0xE8, 0x58, 0x40, 0x38, 0x00 } },   // U+305C (Hiragana ZE)
        { '\u305D', new byte[] { 0x78, 0x10, 0x20, 0xFE, 0x10, 0x20, 0x1C, 0x00 } },   // U+305D (Hiragana SO)
        { '\u305E', new byte[] { 0xF2, 0x24, 0x40, 0xFE, 0x10, 0x20, 0x1C, 0x00 } },   // U+305E (Hiragana ZO)
        { '\u305F', new byte[] { 0x40, 0xF0, 0x40, 0x4E, 0x40, 0x90, 0x8E, 0x00 } },   // U+305F (Hiragana TA)
        { '\u3060', new byte[] { 0x42, 0xF4, 0x40, 0x4E, 0x40, 0x90, 0x8E, 0x00 } },   // U+3060 (Hiragana DA)
        { '\u3061', new byte[] { 0x10, 0x7E, 0x10, 0x3C, 0x02, 0x02, 0x1C, 0x00 } },   // U+3061 (Hiragana TI)
        { '\u3062', new byte[] { 0x22, 0xF4, 0x20, 0x78, 0x04, 0x04, 0x38, 0x00 } },   // U+3062 (Hiragana DI)
        { '\u3063', new byte[] { 0x00, 0x00, 0x00, 0x38, 0x44, 0x04, 0x38, 0x00 } },   // U+3063 (Hiragana tu)
        { '\u3064', new byte[] { 0x00, 0x38, 0x44, 0x82, 0x02, 0x04, 0x38, 0x00 } },   // U+3064 (Hiragana TU)
        { '\u3065', new byte[] { 0x02, 0x04, 0x78, 0x84, 0x04, 0x04, 0x38, 0x00 } },   // U+3065 (Hiragana DU)
        { '\u3066', new byte[] { 0x00, 0x7C, 0x10, 0x20, 0x20, 0x20, 0x1C, 0x00 } },   // U+3066 (Hiragana TE)
        { '\u3067', new byte[] { 0x00, 0x7C, 0x12, 0x24, 0x20, 0x20, 0x1C, 0x00 } },   // U+3067 (Hiragana DE)
        { '\u3068', new byte[] { 0x20, 0x20, 0x10, 0x3C, 0x40, 0x40, 0x3C, 0x00 } },   // U+3068 (Hiragana TO)
        { '\u3069', new byte[] { 0x22, 0x24, 0x10, 0x3C, 0x40, 0x40, 0x3C, 0x00 } },   // U+3069 (Hiragana DO)
        { '\u306A', new byte[] { 0x4C, 0x40, 0xE4, 0x44, 0x4E, 0x94, 0x88, 0x00 } },   // U+306A (Hiragana NA)
        { '\u306B', new byte[] { 0x00, 0x40, 0x5E, 0x40, 0x50, 0x4E, 0x40, 0x00 } },   // U+306B (Hiragana NI)
        { '\u306C', new byte[] { 0x10, 0x90, 0x7C, 0xD2, 0xA6, 0xAA, 0x44, 0x00 } },   // U+306C (Hiragana NU)
        { '\u306D', new byte[] { 0x20, 0xE0, 0x2C, 0x32, 0x66, 0x2A, 0x24, 0x00 } },   // U+306D (Hiragana NE)
        { '\u306E', new byte[] { 0x00, 0x00, 0x3C, 0x52, 0x92, 0xA2, 0x44, 0x00 } },   // U+306E (Hiragana NO)
        { '\u306F', new byte[] { 0x00, 0x44, 0x5E, 0x44, 0x4E, 0x54, 0x48, 0x00 } },   // U+306F (Hiragana HA)
        { '\u3070', new byte[] { 0x01, 0x8A, 0xB8, 0x88, 0x9C, 0xA8, 0x90, 0x00 } },   // U+3070 (Hiragana BA)
        { '\u3071', new byte[] { 0x02, 0x8D, 0xBA, 0x88, 0x9C, 0xA8, 0x90, 0x00 } },   // U+3071 (Hiragana PA)
        { '\u3072', new byte[] { 0x00, 0x00, 0xC8, 0x4C, 0x8A, 0x88, 0x70, 0x00 } },   // U+3072 (Hiragana HI)
        { '\u3073', new byte[] { 0x02, 0x04, 0xC0, 0x4C, 0x8A, 0x88, 0x70, 0x00 } },   // U+3073 (Hiragana BI)
        { '\u3074', new byte[] { 0x02, 0x05, 0xC2, 0x4C, 0x8A, 0x88, 0x70, 0x00 } },   // U+3074 (Hiragana PI)
        { '\u3075', new byte[] { 0x38, 0x00, 0x10, 0x54, 0x92, 0x08, 0x30, 0x00 } },   // U+3075 (Hiragana HU)
        { '\u3076', new byte[] { 0x32, 0x04, 0x10, 0x54, 0x92, 0x08, 0x30, 0x00 } },   // U+3076 (Hiragana BU)
        { '\u3077', new byte[] { 0x32, 0x05, 0x12, 0x50, 0x94, 0x12, 0x30, 0x00 } },   // U+3077 (Hiragana PU)
        { '\u3078', new byte[] { 0x00, 0x00, 0x20, 0x50, 0x88, 0x04, 0x02, 0x00 } },   // U+3078 (Hiragana HE)
        { '\u3079', new byte[] { 0x04, 0x02, 0x28, 0x54, 0x88, 0x04, 0x02, 0x00 } },   // U+3079 (Hiragana BE)
        { '\u307A', new byte[] { 0x04, 0x0A, 0x24, 0x50, 0x88, 0x04, 0x02, 0x00 } },   // U+307A (Hiragana PE)
        { '\u307B', new byte[] { 0xBE, 0x88, 0xBE, 0x88, 0x9C, 0xAA, 0x90, 0x00 } },   // U+307B (Hiragana HO)
        { '\u307C', new byte[] { 0xB9, 0x8A, 0xB8, 0x88, 0x9C, 0xAA, 0x90, 0x00 } },   // U+307C (Hiragana BO)
        { '\u307D', new byte[] { 0xBA, 0x8D, 0xBA, 0x88, 0x9C, 0xAA, 0x90, 0x00 } },   // U+307D (Hiragana PO)
        { '\u307E', new byte[] { 0x7E, 0x10, 0x7C, 0x10, 0x38, 0x54, 0x20, 0x00 } },   // U+307E (Hiragana MA)
        { '\u307F', new byte[] { 0x00, 0xE0, 0x24, 0x24, 0x7E, 0xA4, 0x48, 0x00 } },   // U+307F (Hiragana MI)
        { '\u3080', new byte[] { 0x20, 0xF0, 0x26, 0x60, 0xA0, 0x64, 0x3C, 0x00 } },   // U+3080 (Hiragana MU)
        { '\u3081', new byte[] { 0x00, 0x90, 0xBC, 0x52, 0xD2, 0xA2, 0x54, 0x00 } },   // U+3081 (Hiragana ME)
        { '\u3082', new byte[] { 0x40, 0xF0, 0x40, 0xF0, 0x46, 0x42, 0x3C, 0x00 } },   // U+3082 (Hiragana MO)
        { '\u3083', new byte[] { 0x00, 0x00, 0x48, 0xF8, 0x44, 0x48, 0x20, 0x00 } },   // U+3083 (Hiragana ya)
        { '\u3084', new byte[] { 0x00, 0x48, 0xFC, 0x42, 0x42, 0x2C, 0x20, 0x00 } },   // U+3084 (Hiragana YA)
        { '\u3085', new byte[] { 0x00, 0x00, 0x88, 0xBC, 0xCA, 0x9C, 0x88, 0x00 } },   // U+3085 (Hiragana yu)
        { '\u3086', new byte[] { 0x00, 0x88, 0xBC, 0xCA, 0x8A, 0x9C, 0x88, 0x00 } },   // U+3086 (Hiragana YU)
        { '\u3087', new byte[] { 0x00, 0x10, 0x1C, 0x10, 0x38, 0x54, 0x20, 0x00 } },   // U+3087 (Hiragana yo)
        { '\u3088', new byte[] { 0x10, 0x10, 0x1C, 0x10, 0x38, 0x54, 0x20, 0x00 } },   // U+3088 (Hiragana YO)
        { '\u3089', new byte[] { 0x78, 0x00, 0x40, 0x5C, 0x62, 0x42, 0x0C, 0x00 } },   // U+3089 (Hiragana RA)
        { '\u308A', new byte[] { 0x00, 0x04, 0x44, 0x44, 0x54, 0x24, 0x08, 0x00 } },   // U+308A (Hiragana RI)
        { '\u308B', new byte[] { 0xF8, 0x10, 0x3C, 0x42, 0x92, 0x2A, 0x1C, 0x00 } },   // U+308B (Hiragana RU)
        { '\u308C', new byte[] { 0x20, 0xE0, 0x20, 0x30, 0x68, 0xAA, 0x24, 0x00 } },   // U+308C (Hiragana RE)
        { '\u308D', new byte[] { 0xFC, 0x08, 0x10, 0x3C, 0x42, 0x82, 0x0C, 0x00 } },   // U+308D (Hiragana RO)
        { '\u308E', new byte[] { 0x00, 0x00, 0x10, 0x70, 0x1C, 0x32, 0x54, 0x00 } },   // U+308E (Hiragana wa)
        { '\u308F', new byte[] { 0x20, 0xE0, 0x20, 0x3C, 0x62, 0xA2, 0x24, 0x00 } },   // U+308F (Hiragana WA)
        { '\u3090', new byte[] { 0x70, 0x10, 0x3C, 0x52, 0x96, 0xAA, 0x4C, 0x00 } },   // U+3090 (Hiragana WI)
        { '\u3091', new byte[] { 0x60, 0x3C, 0x42, 0x9C, 0x20, 0x6C, 0x92, 0x00 } },   // U+3091 (Hiragana WE)
        { '\u3092', new byte[] { 0x20, 0xF0, 0x20, 0x76, 0x88, 0x10, 0x0E, 0x00 } },   // U+3092 (Hiragana WO)
        { '\u3093', new byte[] { 0x10, 0x10, 0x20, 0x30, 0x6A, 0x4A, 0x84, 0x00 } },   // U+3093 (Hiragana N)
        { '\u3094', new byte[] { 0x02, 0x74, 0x00, 0x3C, 0x42, 0x02, 0x1C, 0x00 } },   // U+3094 (Hiragana VU)
        { '\u3095', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+3095
        { '\u3096', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+3096
        { '\u3097', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+3097
        { '\u3098', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+3098
        { '\u3099', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+3099 (voiced combinator mark)
        { '\u309A', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+309A (semivoiced combinator mark)
        { '\u309B', new byte[] { 0x02, 0x01, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00 } },   // U+309B (Hiragana voiced mark)
        { '\u309C', new byte[] { 0x02, 0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+309C (Hiragana semivoiced mark)
        { '\u309D', new byte[] { 0x00, 0x00, 0x10, 0x10, 0x08, 0x0C, 0x30, 0x00 } },   // U+309D (Hiragana iteration mark)
        { '\u309E', new byte[] { 0x04, 0x02, 0x28, 0x24, 0x10, 0x18, 0x60, 0x00 } },   // U+309E (Hiragana voiced iteration mark)
        { '\u309F', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+309F

        // Constant: font8x8_2500
        // Contains an 8x8 font map for unicode points U+2500 - U+257F (box drawing)
        { '\u2500', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00 } },   // U+2500 (thin horizontal)
        { '\u2501', new byte[] { 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00 } },   // U+2501 (thick horizontal)
        { '\u2502', new byte[] { 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10 } },   // U+2502 (thin vertical)
        { '\u2503', new byte[] { 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 } },   // U+2503 (thich vertical)
        { '\u2504', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xDD, 0x00, 0x00, 0x00 } },   // U+2504 (thin horizontal dashed)
        { '\u2505', new byte[] { 0x00, 0x00, 0x00, 0xDD, 0xDD, 0x00, 0x00, 0x00 } },   // U+2505 (thick horizontal dashed)
        { '\u2506', new byte[] { 0x10, 0x00, 0x10, 0x10, 0x10, 0x00, 0x10, 0x10 } },   // U+2506 (thin vertical dashed)
        { '\u2507', new byte[] { 0x18, 0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18 } },   // U+2507 (thich vertical dashed)
        { '\u2508', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xAA, 0x00, 0x00, 0x00 } },   // U+2508 (thin horizontal dotted)
        { '\u2509', new byte[] { 0x00, 0x00, 0x00, 0xAA, 0xAA, 0x00, 0x00, 0x00 } },   // U+2509 (thick horizontal dotted)
        { '\u250A', new byte[] { 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10 } },   // U+250A (thin vertical dotted)
        { '\u250B', new byte[] { 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18 } },   // U+250B (thich vertical dotted)
        { '\u250C', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xf8, 0x10, 0x10, 0x10 } },   // U+250C (down L, right L)
        { '\u250D', new byte[] { 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x10, 0x10, 0x10 } },   // U+250D (down L, right H)
        { '\u250E', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18 } },   // U+250E (down H, right L)
        { '\u250F', new byte[] { 0x00, 0x00, 0x00, 0xf8, 0xf8, 0x18, 0x18, 0x18 } },   // U+250F (down H, right H)
        { '\u2510', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x10, 0x10 } },   // U+2510 (down L, left L)
        { '\u2511', new byte[] { 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x10, 0x10, 0x10 } },   // U+2511 (down L, left H)
        { '\u2512', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18 } },   // U+2512 (down H, left L)
        { '\u2513', new byte[] { 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x18, 0x18, 0x18 } },   // U+2513 (down H, left H)
        { '\u2514', new byte[] { 0x10, 0x10, 0x10, 0x10, 0xf8, 0x00, 0x00, 0x00 } },   // U+2514 (up L, right L)
        { '\u2515', new byte[] { 0x10, 0x10, 0x10, 0xf8, 0xf8, 0x00, 0x00, 0x00 } },   // U+2515 (up L, right H)
        { '\u2516', new byte[] { 0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00 } },   // U+2516 (up H, right L)
        { '\u2517', new byte[] { 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x00, 0x00, 0x00 } },   // U+2517 (up H, right H)
        { '\u2518', new byte[] { 0x10, 0x10, 0x10, 0x10, 0x0f, 0x00, 0x00, 0x00 } },   // U+2518 (up L, left L)
        { '\u2519', new byte[] { 0x10, 0x10, 0x10, 0x0f, 0x0f, 0x00, 0x00, 0x00 } },   // U+2519 (up L, left H)
        { '\u251A', new byte[] { 0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00 } },   // U+251A (up H, left L)
        { '\u251B', new byte[] { 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x00, 0x00, 0x00 } },   // U+251B (up H, left H)
        { '\u251C', new byte[] { 0x10, 0x10, 0x10, 0x10, 0xf8, 0x10, 0x10, 0x10 } },   // U+251C (down L, right L, up L)
        { '\u251D', new byte[] { 0x10, 0x10, 0x10, 0xf8, 0xf8, 0x10, 0x10, 0x10 } },   // U+251D (down L, right H, up L)
        { '\u251E', new byte[] { 0x18, 0x18, 0x18, 0x18, 0xf8, 0x10, 0x10, 0x10 } },   // U+251E (down L, right L, up H)
        { '\u251F', new byte[] { 0x10, 0x10, 0x10, 0x10, 0xf8, 0x18, 0x18, 0x18 } },   // U+251F (down H, right L, up L)
        { '\u2520', new byte[] { 0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18 } },   // U+2520 (down H, right L, up H)
        { '\u2521', new byte[] { 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x10, 0x10, 0x10 } },   // U+2521 (down L, right H, up H)
        { '\u2522', new byte[] { 0x10, 0x10, 0x10, 0xf8, 0xf8, 0x18, 0x18, 0x18 } },   // U+2522 (down H, right H, up L)
        { '\u2523', new byte[] { 0x18, 0x18, 0x18, 0xf8, 0xf8, 0x18, 0x18, 0x18 } },   // U+2523 (down H, right H, up H)
        { '\u2524', new byte[] { 0x10, 0x10, 0x10, 0x10, 0x0f, 0x10, 0x10, 0x10 } },   // U+2524 (down L, left L, up L)
        { '\u2525', new byte[] { 0x10, 0x10, 0x10, 0x0f, 0x0f, 0x10, 0x10, 0x10 } },   // U+2525 (down L, left H, up L)
        { '\u2526', new byte[] { 0x18, 0x18, 0x18, 0x18, 0x1f, 0x10, 0x10, 0x10 } },   // U+2526 (down L, left L, up H)
        { '\u2527', new byte[] { 0x10, 0x10, 0x10, 0x10, 0x1f, 0x18, 0x18, 0x18 } },   // U+2527 (down H, left L, up L)
        { '\u2528', new byte[] { 0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18 } },   // U+2528 (down H, left L, up H)
        { '\u2529', new byte[] { 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x10, 0x10, 0x10 } },   // U+2529 (down L, left H, up H)
        { '\u252A', new byte[] { 0x10, 0x10, 0x10, 0x1f, 0x1f, 0x18, 0x18, 0x18 } },   // U+252A (down H, left H, up L)
        { '\u252B', new byte[] { 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x18, 0x18, 0x18 } },   // U+252B (down H, left H, up H)
        { '\u252C', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xff, 0x10, 0x10, 0x10 } },   // U+252C (down L, right L, left L)
        { '\u252D', new byte[] { 0x00, 0x00, 0x00, 0x0f, 0xff, 0x10, 0x10, 0x10 } },   // U+252D (down L, right L, left H)
        { '\u252E', new byte[] { 0x00, 0x00, 0x00, 0xf8, 0xff, 0x10, 0x10, 0x10 } },   // U+252E (down L, right H, left L)
        { '\u252F', new byte[] { 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0x10, 0x10 } },   // U+252F (down L, right H, left H)
        { '\u2530', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18 } },   // U+2530 (down H, right L, left L)
        { '\u2531', new byte[] { 0x00, 0x00, 0x00, 0x1f, 0xff, 0x18, 0x18, 0x18 } },   // U+2531 (down H, right L, left H)
        { '\u2532', new byte[] { 0x00, 0x00, 0x00, 0xf8, 0xff, 0x18, 0x18, 0x18 } },   // U+2532 (down H, right H, left L)
        { '\u2533', new byte[] { 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x18, 0x18 } },   // U+2533 (down H, right H, left H)
        { '\u2534', new byte[] { 0x10, 0x10, 0x10, 0x10, 0xff, 0x00, 0x00, 0x00 } },   // U+2534 (up L, right L, left L)
        { '\u2535', new byte[] { 0x10, 0x10, 0x10, 0x0f, 0xff, 0x00, 0x00, 0x00 } },   // U+2535 (up L, right L, left H)
        { '\u2536', new byte[] { 0x10, 0x10, 0x10, 0xf8, 0xff, 0x00, 0x00, 0x00 } },   // U+2536 (up L, right H, left L)
        { '\u2537', new byte[] { 0x10, 0x10, 0x10, 0xff, 0xff, 0x00, 0x00, 0x00 } },   // U+2537 (up L, right H, left H)
        { '\u2538', new byte[] { 0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00 } },   // U+2538 (up H, right L, left L)
        { '\u2539', new byte[] { 0x18, 0x18, 0x18, 0x1f, 0xff, 0x00, 0x00, 0x00 } },   // U+2539 (up H, right L, left H)
        { '\u253A', new byte[] { 0x18, 0x18, 0x18, 0xf8, 0xff, 0x00, 0x00, 0x00 } },   // U+253A (up H, right H, left L)
        { '\u253B', new byte[] { 0x18, 0x18, 0x18, 0xff, 0xff, 0x00, 0x00, 0x00 } },   // U+253B (up H, right H, left H)
        { '\u253C', new byte[] { 0x10, 0x10, 0x10, 0x10, 0xff, 0x10, 0x10, 0x10 } },   // U+253C (up L, right L, left L, down L)
        { '\u253D', new byte[] { 0x10, 0x10, 0x10, 0x0f, 0xff, 0x10, 0x10, 0x10 } },   // U+253D (up L, right L, left H, down L)
        { '\u253E', new byte[] { 0x10, 0x10, 0x10, 0xf8, 0xff, 0x10, 0x10, 0x10 } },   // U+253E (up L, right H, left L, down L)
        { '\u253F', new byte[] { 0x10, 0x10, 0x10, 0xff, 0xff, 0x10, 0x10, 0x10 } },   // U+253F (up L, right H, left H, down L)
        { '\u2540', new byte[] { 0x18, 0x18, 0x18, 0x18, 0xff, 0x10, 0x10, 0x10 } },   // U+2540 (up H, right L, left L, down L)
        { '\u2541', new byte[] { 0x10, 0x10, 0x10, 0x10, 0xff, 0x18, 0x18, 0x18 } },   // U+2541 (up L, right L, left L, down H)
        { '\u2542', new byte[] { 0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18 } },   // U+2542 (up H, right L, left L, down H)
        { '\u2543', new byte[] { 0x18, 0x18, 0x18, 0x1f, 0xff, 0x10, 0x10, 0x10 } },   // U+2543 (up H, right L, left H, down L)
        { '\u2544', new byte[] { 0x18, 0x18, 0x18, 0xf8, 0xff, 0x10, 0x10, 0x10 } },   // U+2544 (up H, right H, left L, down L)
        { '\u2545', new byte[] { 0x10, 0x10, 0x10, 0x1f, 0xff, 0x18, 0x18, 0x18 } },   // U+2545 (up L, right L, left H, down H)
        { '\u2546', new byte[] { 0x10, 0x10, 0x10, 0xf8, 0xff, 0x18, 0x18, 0x18 } },   // U+2546 (up L, right H, left L, down H)
        { '\u2547', new byte[] { 0x18, 0x18, 0x18, 0xff, 0xff, 0x10, 0x10, 0x10 } },   // U+2547 (up H, right H, left H, down L)
        { '\u2548', new byte[] { 0x10, 0x10, 0x10, 0xff, 0xff, 0x18, 0x18, 0x18 } },   // U+2548 (up L, right H, left H, down H)
        { '\u2549', new byte[] { 0x18, 0x18, 0x18, 0x1f, 0xff, 0x18, 0x18, 0x18 } },   // U+2549 (up H, right L, left H, down H)
        { '\u254A', new byte[] { 0x18, 0x18, 0x18, 0xf8, 0xff, 0x18, 0x18, 0x18 } },   // U+254A (up H, right H, left L, down H)
        { '\u254B', new byte[] { 0x18, 0x18, 0x18, 0xff, 0xff, 0x18, 0x18, 0x18 } },   // U+254B (up H, right H, left H, down H)
        { '\u254C', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xE7, 0x00, 0x00, 0x00 } },   // U+254C (thin horizontal broken)
        { '\u254D', new byte[] { 0x00, 0x00, 0x00, 0xE7, 0xE7, 0x00, 0x00, 0x00 } },   // U+254D (thick horizontal broken)
        { '\u254E', new byte[] { 0x10, 0x10, 0x10, 0x00, 0x00, 0x10, 0x10, 0x10 } },   // U+254E (thin vertical broken)
        { '\u254F', new byte[] { 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18, 0x18 } },   // U+254F (thich vertical broken)
        { '\u2550', new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00 } },   // U+2550 (double horizontal)
        { '\u2551', new byte[] { 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28 } },   // U+2551 (double vertical)
        { '\u2552', new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x10, 0x1F, 0x10, 0x10 } },   // U+2552 (down L, right D)
        { '\u2553', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x3F, 0x28, 0x28, 0x28 } },   // U+2553 (down D, right L)
        { '\u2554', new byte[] { 0x00, 0x00, 0x00, 0x3F, 0x20, 0x2F, 0x28, 0x28 } },   // U+2554 (down D, right D)
        { '\u2555', new byte[] { 0x00, 0x00, 0x00, 0xF0, 0x10, 0xF0, 0x10, 0x10 } },   // U+2555 (down L, left D)
        { '\u2556', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xF8, 0x28, 0x28, 0x28 } },   // U+2556 (down D, left L)
        { '\u2557', new byte[] { 0x00, 0x00, 0x00, 0xF8, 0x08, 0xE8, 0x28, 0x28 } },   // U+2557 (down D, left D)
        { '\u2558', new byte[] { 0x10, 0x10, 0x10, 0x1F, 0x10, 0x1F, 0x00, 0x00 } },   // U+2558 (up L, right D)
        { '\u2559', new byte[] { 0x28, 0x28, 0x28, 0x28, 0x3F, 0x00, 0x00, 0x00 } },   // U+2559 (up D, right L)
        { '\u255A', new byte[] { 0x28, 0x28, 0x28, 0x2F, 0x20, 0x3F, 0x00, 0x00 } },   // U+255A (up D, right D)
        { '\u255B', new byte[] { 0x10, 0x10, 0x10, 0xF0, 0x10, 0xF0, 0x00, 0x00 } },   // U+255B (up L, left D)
        { '\u255C', new byte[] { 0x28, 0x28, 0x28, 0x28, 0xF8, 0x00, 0x00, 0x00 } },   // U+255C (up D, left L)
        { '\u255D', new byte[] { 0x28, 0x28, 0x28, 0xE8, 0x08, 0xF8, 0x00, 0x00 } },   // U+255D (up D, left D)
        { '\u255E', new byte[] { 0x10, 0x10, 0x10, 0x1F, 0x10, 0x1F, 0x10, 0x10 } },   // U+255E (up L, down L, right D)
        { '\u255F', new byte[] { 0x28, 0x28, 0x28, 0x28, 0x2F, 0x28, 0x28, 0x28 } },   // U+255F (up D, down D, right L)
        { '\u2560', new byte[] { 0x28, 0x28, 0x28, 0x2F, 0x20, 0x2F, 0x28, 0x28 } },   // U+2560 (up D, down D, right D)
        { '\u2561', new byte[] { 0x10, 0x10, 0x10, 0xF0, 0x10, 0xF0, 0x10, 0x10 } },   // U+2561 (up L, down L, left D)
        { '\u2562', new byte[] { 0x28, 0x28, 0x28, 0x28, 0xE8, 0x28, 0x28, 0x28 } },   // U+2562 (up D, down D, left L)
        { '\u2563', new byte[] { 0x28, 0x28, 0x28, 0xE8, 0x08, 0xE8, 0x28, 0x28 } },   // U+2563 (up D, down D, left D)
        { '\u2564', new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x10, 0x10 } },   // U+2564 (left D, right D, down L)
        { '\u2565', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xFF, 0x28, 0x28, 0x28 } },   // U+2565 (left L, right L, down D)
        { '\u2566', new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x00, 0xEF, 0x28, 0x28 } },   // U+2566 (left D, right D, down D)
        { '\u2567', new byte[] { 0x10, 0x10, 0x10, 0xFF, 0x00, 0xFF, 0x00, 0x00 } },   // U+2567 (left D, right D, up L)
        { '\u2568', new byte[] { 0x28, 0x28, 0x28, 0x28, 0xFF, 0x00, 0x00, 0x00 } },   // U+2568 (left L, right L, up D)
        { '\u2569', new byte[] { 0x28, 0x28, 0x28, 0xEF, 0x00, 0xFF, 0x00, 0x00 } },   // U+2569 (left D, right D, up D)
        { '\u256A', new byte[] { 0x10, 0x10, 0x10, 0xFF, 0x10, 0xFF, 0x10, 0x10 } },   // U+256A (left D, right D, down L, up L)
        { '\u256B', new byte[] { 0x28, 0x28, 0x28, 0x28, 0xFF, 0x28, 0x28, 0x28 } },   // U+256B (left L, right L, down D, up D)
        { '\u256C', new byte[] { 0x28, 0x28, 0x28, 0xEF, 0x00, 0xEF, 0x28, 0x28 } },   // U+256C (left D, right D, down D, up D)
        { '\u256D', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x10, 0x10 } },   // U+256D (curve down-right)
        { '\u256E', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xC0, 0x20, 0x10, 0x10 } },   // U+256E (curve down-left)
        { '\u256F', new byte[] { 0x10, 0x10, 0x10, 0x20, 0xC0, 0x00, 0x00, 0x00 } },   // U+256F (curve up-left)
        { '\u2570', new byte[] { 0x10, 0x10, 0x10, 0x08, 0x07, 0x00, 0x00, 0x00 } },   // U+2570 (curve up-right)
        { '\u2571', new byte[] { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 } },   // U+2571 (diagonal bottom-left to top-right)
        { '\u2572', new byte[] { 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01 } },   // U+2572 (diagonal bottom-right to top-left)
        { '\u2573', new byte[] { 0x81, 0x42, 0x24, 0x18, 0x18, 0x24, 0x42, 0x81 } },   // U+2573 (diagonal cross)
        { '\u2574', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00 } },   // U+2574 (left L)
        { '\u2575', new byte[] { 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00 } },   // U+2575 (up L)
        { '\u2576', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00 } },   // U+2576 (right L)
        { '\u2577', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x10 } },   // U+2577 (down L)
        { '\u2578', new byte[] { 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00 } },   // U+2578 (left H)
        { '\u2579', new byte[] { 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00 } },   // U+2579 (up H)
        { '\u257A', new byte[] { 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00 } },   // U+257A (right H)
        { '\u257B', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18 } },   // U+257B (down H)
        { '\u257C', new byte[] { 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x00 } },   // U+257C (right H, left L)
        { '\u257D', new byte[] { 0x10, 0x10, 0x10, 0x10, 0x18, 0x18, 0x18, 0x18 } },   // U+257D (up L, down H)
        { '\u257E', new byte[] { 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x00, 0x00, 0x00 } },   // U+257E (right L, left H)
        { '\u257F', new byte[] { 0x18, 0x18, 0x18, 0x18, 0x10, 0x10, 0x10, 0x10 } },   // U+257F (up H, down L)

        // Constant: font8x8_2580
        // Contains an 8x8 font map for unicode points U+2580 - U+259F (block elements)
        { '\u2580', new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 } },   // U+2580 (top half)
        { '\u2581', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF } },   // U+2581 (box 1/8)
        { '\u2582', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF } },   // U+2582 (box 2/8)
        { '\u2583', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF } },   // U+2583 (box 3/8)
        { '\u2584', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+2584 (bottom half)
        { '\u2585', new byte[] { 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+2585 (box 5/8)
        { '\u2586', new byte[] { 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+2586 (box 6/8)
        { '\u2587', new byte[] { 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+2587 (box 7/8)
        { '\u2588', new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+2588 (solid)
        { '\u2589', new byte[] { 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE } },   // U+2589 (box 7/8)
        { '\u258A', new byte[] { 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC, 0xFC } },   // U+258A (box 6/8)
        { '\u258B', new byte[] { 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8 } },   // U+258B (box 5/8)
        { '\u258C', new byte[] { 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0 } },   // U+258C (left half)
        { '\u258D', new byte[] { 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0 } },   // U+258D (box 3/8)
        { '\u258E', new byte[] { 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0 } },   // U+258E (box 2/8)
        { '\u258F', new byte[] { 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80 } },   // U+258F (box 1/8)
        { '\u2590', new byte[] { 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F } },   // U+2590 (right half)
        { '\u2591', new byte[] { 0xAA, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00 } },   // U+2591 (25% solid)
        { '\u2592', new byte[] { 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55 } },   // U+2592 (50% solid)
        { '\u2593', new byte[] { 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA } },   // U+2593 (75% solid)
        { '\u2594', new byte[] { 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },   // U+2594 (box 1/8)
        { '\u2595', new byte[] { 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01 } },   // U+2595 (box 1/8)
        { '\u2596', new byte[] { 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0 } },   // U+2596 (box bottom left)
        { '\u2597', new byte[] { 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F } },   // U+2597 (box bottom right)
        { '\u2598', new byte[] { 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00 } },   // U+2598 (box top left)
        { '\u2599', new byte[] { 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+2599 (boxes left and bottom)
        { '\u259A', new byte[] { 0xF0, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x0F } },   // U+259A (boxes top-left and bottom right)
        { '\u259B', new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0 } },   // U+259B (boxes top and left)
        { '\u259C', new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x0F, 0x0F } },   // U+259C (boxes top and right)
        { '\u259D', new byte[] { 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00 } },   // U+259D (box top right)
        { '\u259E', new byte[] { 0x0F, 0x0F, 0x0F, 0x0F, 0xF0, 0xF0, 0xF0, 0xF0 } },   // U+259E (boxes top right and bottom left)
        { '\u259F', new byte[] { 0x0F, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF } },   // U+259F (boxes right and bottom)

        // for later use
        { '\u20A7', new byte[] { 0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC7 } },   // U+20A7 (Spanish Pesetas/Pt)
        { '\u0192', new byte[] { 0x0E, 0x1B, 0x18, 0x3C, 0x18, 0x18, 0xD8, 0x70 } },   // U+0192 (dutch florijn)
        { '\u2310', new byte[] { 0x00, 0x00, 0x00, 0xFC, 0xC0, 0xC0, 0x00, 0x00 } },   // U+2310 (gun pointing right)
        { '\u2264', new byte[] { 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00 } },   // U+2264 (less than or equal)
        { '\u2265', new byte[] { 0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00 } },   // U+2265 (greater than or equal)
        { '\u1EF2', new byte[] { 0x70, 0x00, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x00 } },   // U+1EF2 (Y grave)
        { '\u1EF3', new byte[] { 0x00, 0xE0, 0x00, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 } },   // U+1EF3 (y grave)

        // standard galactic alphabet
        { '\uE541', new byte[] { 0x00, 0x00, 0x1C, 0x66, 0x60, 0x60, 0xE0, 0x00 } },   // U+E541 (SGA A)
        { '\uE542', new byte[] { 0x00, 0x00, 0x30, 0x30, 0x18, 0x0C, 0xFE, 0x00 } },   // U+E542 (SGA B)
        { '\uE543', new byte[] { 0x00, 0x00, 0x30, 0x00, 0x30, 0x0C, 0x0C, 0x00 } },   // U+E543 (SGA C)
        { '\uE544', new byte[] { 0x00, 0x00, 0xFE, 0x00, 0xC0, 0x38, 0x06, 0x00 } },   // U+E544 (SGA D)
        { '\uE545', new byte[] { 0x00, 0x00, 0xC6, 0xC0, 0xC0, 0xC0, 0xFE, 0x00 } },   // U+E545 (SGA E)
        { '\uE546', new byte[] { 0x00, 0x00, 0x00, 0xFF, 0x00, 0xDB, 0x00, 0x00 } },   // U+E546 (SGA F)
        { '\uE547', new byte[] { 0x00, 0x00, 0x0C, 0x0C, 0x7C, 0x0C, 0x0C, 0x00 } },   // U+E547 (SGA G)
        { '\uE548', new byte[] { 0x00, 0x00, 0x7E, 0x00, 0x7E, 0x18, 0x18, 0x00 } },   // U+E548 (SGA H)
        { '\uE549', new byte[] { 0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00 } },   // U+E549 (SGA I)
        { '\uE54A', new byte[] { 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x18, 0x00 } },   // U+E54A (SGA J)
        { '\uE54B', new byte[] { 0x00, 0x00, 0x18, 0x18, 0x5A, 0x18, 0x18, 0x00 } },   // U+E54B (SGA K)
        { '\uE54C', new byte[] { 0x00, 0x00, 0xC0, 0xCC, 0xC0, 0xCC, 0xC0, 0x00 } },   // U+E54C (SGA L)
        { '\uE54D', new byte[] { 0x00, 0x00, 0xC6, 0x06, 0x06, 0x06, 0xFE, 0x00 } },   // U+E54D (SGA M)
        { '\uE54E', new byte[] { 0x00, 0x00, 0x66, 0x06, 0x0C, 0x18, 0x30, 0x00 } },   // U+E54E (SGA N)
        { '\uE54F', new byte[] { 0x00, 0x00, 0x3C, 0x06, 0x0C, 0x18, 0x30, 0x00 } },   // U+E54F (SGA O)
        { '\uE550', new byte[] { 0x00, 0x00, 0x66, 0x06, 0x66, 0x60, 0x66, 0x00 } },   // U+E550 (SGA P)
        { '\uE551', new byte[] { 0x00, 0x00, 0x18, 0x00, 0x7E, 0x06, 0x7E, 0x00 } },   // U+E551 (SGA Q)
        { '\uE552', new byte[] { 0x00, 0x00, 0x00, 0x66, 0x00, 0x66, 0x00, 0x00 } },   // U+E552 (SGA R)
        { '\uE553', new byte[] { 0x00, 0x00, 0x30, 0x30, 0x3C, 0x0C, 0x0C, 0x00 } },   // U+E553 (SGA S)
        { '\uE554', new byte[] { 0x00, 0x00, 0x3C, 0x0C, 0x0C, 0x00, 0x0C, 0x00 } },   // U+E554 (SGA T)
        { '\uE555', new byte[] { 0x00, 0x00, 0x00, 0x6C, 0x00, 0xFE, 0x00, 0x00 } },   // U+E555 (SGA U)
        { '\uE556', new byte[] { 0x00, 0x00, 0x18, 0x18, 0x7E, 0x00, 0x7E, 0x00 } },   // U+E556 (SGA V)
        { '\uE557', new byte[] { 0x00, 0x00, 0x00, 0x18, 0x00, 0x66, 0x00, 0x00 } },   // U+E557 (SGA W)
        { '\uE558', new byte[] { 0x00, 0x00, 0x66, 0x0C, 0x18, 0x30, 0x60, 0x00 } },   // U+E558 (SGA X)
        { '\uE559', new byte[] { 0x00, 0x00, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x00 } },   // U+E559 (SGA Y)
        { '\uE55A', new byte[] { 0x00, 0x00, 0x18, 0x3C, 0x66, 0x66, 0x66, 0x00 } }    // U+E55A (SGA Z)
    };

    public static byte[] GetChar(char letter)
    {
        if (FONTDICT.ContainsKey(letter))
            return FONTDICT[letter];
        else
            return FONTDICT['?'];
    }

    public static void AddChar(char letter, byte[] font)
    {
        if (font == null || font.Length != 8)
        {
            throw new ArgumentException("font must be an array of 8 bytes", nameof(font));
        }

        if (!FONTDICT.ContainsKey(letter))
        {
            FONTDICT.Add(letter, font.Select(x => x).ToArray());
        }
    }

    public static T[] GetPixels<T>(string message, T foreColor, T backColor, Rotation rotation = Rotation.Rotate0)
    {
        if (string.IsNullOrEmpty(message))
            return Array.Empty<T>();

        var pixels = new T[message.Length * 64];
        int i, r, c;
        for (i = 0; i < message.Length; i++)
        {
            var font = GetChar(message[i]);
            for (r = 0; r < 8; r++)
            {
                for (c = 0; c < 8; c++)
                {
                    pixels[i * 64 + r * 8 + c] = ((font[r] >> (7 - c)) & 1) > 0 ? foreColor : backColor;
                }
            }
            pixels.Rotate(8, i * 64, rotation);
        }
        return pixels;
    }
}
